/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Domain.PO;
import Domain.PoRegistry;
import Domain.Products;
import Domain.Vendor;
import com.sun.jmx.snmp.BerDecoder;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Shiyanrox
 */
public class POtoVendor extends javax.swing.JFrame {

    /**
     * Creates new form POtoVendor
     */
    public POtoVendor() {
        initComponents();
        this.setID();
        this.loadComboVendor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPONo = new javax.swing.JTextField();
        ddlVendor = new javax.swing.JComboBox();
        dcPODate = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtProductSeach = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductSelectOPV = new javax.swing.JTable();
        lblProductNamePOV = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtQTYPOV = new javax.swing.JTextField();
        btnAddtoCartOPV = new javax.swing.JButton();
        lblProductCodePOV = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPOV = new javax.swing.JTable();
        btnRmvItem = new javax.swing.JButton();
        btnRmvAll = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnGenerate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DistributerX: Purchasing Order to Vendor");

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Purchasing Order to Vendor"));

        jLabel1.setText("PO No:");

        jLabel2.setText("Vendor");

        jLabel3.setText("Date");

        txtPONo.setEditable(false);

        ddlVendor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ddlVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddlVendorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPONo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ddlVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dcPODate, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(txtPONo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ddlVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dcPODate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Search");

        txtProductSeach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProductSeachKeyReleased(evt);
            }
        });

        tblProductSelectOPV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Code", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProductSelectOPV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblProductSelectOPVMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblProductSelectOPV);
        if (tblProductSelectOPV.getColumnModel().getColumnCount() > 0) {
            tblProductSelectOPV.getColumnModel().getColumn(0).setPreferredWidth(40);
            tblProductSelectOPV.getColumnModel().getColumn(0).setMaxWidth(40);
        }

        jLabel6.setText("QTY");

        txtQTYPOV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQTYPOVKeyTyped(evt);
            }
        });

        btnAddtoCartOPV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/FontAwesome_f067(1)_24.png"))); // NOI18N
        btnAddtoCartOPV.setText("ADD");
        btnAddtoCartOPV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddtoCartOPVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtProductSeach))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtQTYPOV, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddtoCartOPV))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblProductCodePOV, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblProductNamePOV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtProductSeach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProductNamePOV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblProductCodePOV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtQTYPOV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddtoCartOPV))
                .addGap(31, 31, 31))
        );

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));

        tblPOV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Product code", "Product Name", "QTY"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblPOV);
        if (tblPOV.getColumnModel().getColumnCount() > 0) {
            tblPOV.getColumnModel().getColumn(0).setMaxWidth(30);
        }

        btnRmvItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/FontAwesome_f068(0)_24.png"))); // NOI18N
        btnRmvItem.setText("Remove Item");
        btnRmvItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRmvItemActionPerformed(evt);
            }
        });

        btnRmvAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/FontAwesome_f00d(0)_24.png"))); // NOI18N
        btnRmvAll.setText("Remove All");
        btnRmvAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRmvAllActionPerformed(evt);
            }
        });

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/FontAwesome_f05c(0)_24.png"))); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnGenerate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/FontAwesome_f085(1)_24.png"))); // NOI18N
        btnGenerate.setText("Generate");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnRmvItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRmvAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addComponent(btnGenerate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRmvItem)
                    .addComponent(btnRmvAll)
                    .addComponent(btnCancel)
                    .addComponent(btnGenerate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ddlVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddlVendorActionPerformed
        this.loadTableByVendorAndSearch(txtProductSeach.getText(), ddlVendor.getSelectedItem().toString());
    }//GEN-LAST:event_ddlVendorActionPerformed

    private void txtProductSeachKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductSeachKeyReleased
        this.loadTableByVendorAndSearch(txtProductSeach.getText(), ddlVendor.getSelectedItem().toString());
    }//GEN-LAST:event_txtProductSeachKeyReleased

    private void tblProductSelectOPVMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductSelectOPVMouseReleased
        String item = tblProductSelectOPV.getModel().getValueAt(tblProductSelectOPV.getSelectedRow(), 0).toString();
        String itemV = tblProductSelectOPV.getModel().getValueAt(tblProductSelectOPV.getSelectedRow(), 1).toString();
        lblProductCodePOV.setText(item);
        lblProductNamePOV.setText(itemV);
    }//GEN-LAST:event_tblProductSelectOPVMouseReleased

    private void btnAddtoCartOPVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddtoCartOPVActionPerformed
        if (txtQTYPOV.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, " Qty Cannot be Empty!", "Data Missing", JOptionPane.ERROR_MESSAGE);
        } else {
            int count = tblPOV.getRowCount();
            DefaultTableModel dtm = (DefaultTableModel) tblPOV.getModel();

            boolean check = false;
            int raw = 0;
            int tbRaw = 0;
            while (count > raw) {
                if (Integer.parseInt(dtm.getValueAt(raw, 1).toString()) == Integer.parseInt(lblProductCodePOV.getText())) {
                    check = true;
                    tbRaw = raw;

                }
                raw++;
            }
            if (check) {
                int currentQty = Integer.parseInt(dtm.getValueAt(tbRaw, 3).toString());
                int newQty = currentQty + Integer.parseInt(txtQTYPOV.getText());
                dtm.setValueAt(newQty, tbRaw, 3);
            } else {

                count++;

                Vector v = new Vector();
                v.add(count);
                v.add(lblProductCodePOV.getText());
                v.add(lblProductNamePOV.getText());
                v.add(txtQTYPOV.getText());
                dtm.addRow(v);
            }
            lblProductCodePOV.setText("");
            lblProductNamePOV.setText("");
            txtQTYPOV.setText("");
        }
    }//GEN-LAST:event_btnAddtoCartOPVActionPerformed

    private void btnRmvAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRmvAllActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) tblPOV.getModel();
        dtm.setRowCount(0);
    }//GEN-LAST:event_btnRmvAllActionPerformed

    private void btnRmvItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRmvItemActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) tblPOV.getModel();
        if (dtm.getRowCount() > 0) {
            try {
                dtm.removeRow(tblPOV.getSelectedRow());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Please Select a Raw !", "Oops", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No Data Available !", "Oops", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnRmvItemActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed
        if (dcPODate.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Please Select a Date", "Data Missing", JOptionPane.ERROR_MESSAGE);
        } else {
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String dt = df.format(dcPODate.getDate());
            /*this stat indicate the po active or cancel 1=active 0=cancel*/
            int Stat = 1;

            boolean status = this.addPO(Integer.parseInt(txtPONo.getText()), ddlVendor.getSelectedItem().toString(), dt, Stat);
            if (status) {
                JOptionPane.showMessageDialog(rootPane, "PO Added Successfully", "Oparation Complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Error in PO Adding", "Oparation Incomplete", JOptionPane.ERROR);
            }
            this.printReport();
            this.clearAll();
        }
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void txtQTYPOVKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQTYPOVKeyTyped
        char c = evt.getKeyChar();
        if (!(c <= '9' && c >= '0')) {
            evt.consume();
        }
    }//GEN-LAST:event_txtQTYPOVKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(POtoVendor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(POtoVendor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(POtoVendor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(POtoVendor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new POtoVendor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddtoCartOPV;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnGenerate;
    private javax.swing.JButton btnRmvAll;
    private javax.swing.JButton btnRmvItem;
    private com.toedter.calendar.JDateChooser dcPODate;
    private javax.swing.JComboBox ddlVendor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblProductCodePOV;
    private javax.swing.JLabel lblProductNamePOV;
    private javax.swing.JTable tblPOV;
    private javax.swing.JTable tblProductSelectOPV;
    private javax.swing.JTextField txtPONo;
    private javax.swing.JTextField txtProductSeach;
    private javax.swing.JTextField txtQTYPOV;
    // End of variables declaration//GEN-END:variables

    private void setID() {

        int id;
        PO obj = new PO();
        id = obj.getLastID();
        id++;
        txtPONo.setText(id + "");
        Date date = new Date();
        dcPODate.setDate(date);

    }

    private void loadComboVendor() {
        Vendor Vendorobj = new Vendor();
        ArrayList<Vendor> VendorobjList = Vendorobj.loadVendor();
        if (VendorobjList.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Sorry ! No Vendors Found.");
        } else {
            Vector v = new Vector();
            Vendor Vendorss = new Vendor();
            int count = 0;
            while (VendorobjList.size() > count) {
                // hiddenValue hv= new hiddenValue();
                Vendorss = VendorobjList.get(count);

                // hv.setVisibleField(Categoryss.getCatName());
                // hv.setHiddenField(Categoryss.getCatID());
                v.add(Vendorss.getV_name());

                count++;
            }
            ddlVendor.setModel(new DefaultComboBoxModel(v));

        }
    }

    private void loadTableByVendorAndSearch(String text, String Vendor) {
        Products Productsobj = new Products();
        ArrayList<Products> ProductsList = Productsobj.loadProductsByVendor(text, Vendor);
        if (ProductsList.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Sorry ! No Product Found.");
        } else {
            DefaultTableModel dtm = (DefaultTableModel) tblProductSelectOPV.getModel();
            dtm.setRowCount(0);
            int count = 0;
            while (ProductsList.size() > count) {
                Vector v = new Vector();
                Products Productss = new Products();
                Productss = ProductsList.get(count);

                v.add(Productss.getPID());
                v.add(Productss.getDescription());

                dtm.addRow(v);
                count++;

            }
        }

    }

    private boolean addPO(int id, String vendor, String date, int stat) {
        boolean status;
        PO obj = new PO();
        obj.setPOno(id);
        obj.setVender(vendor);
        obj.setDate(date);
        obj.setStatus(stat);

        status = obj.addPO(obj);
        if (status) {
            status = addPoregistryBulk(obj);
        }

        return status;
    }

    private boolean addPoregistryBulk(PO obj) {
        ArrayList<PoRegistry> list = new ArrayList<PoRegistry>();
        DefaultTableModel dtm = (DefaultTableModel) tblPOV.getModel();

        for (int raw_id = 0; tblPOV.getRowCount() > raw_id; raw_id++) {
            PoRegistry regObj = new PoRegistry();
            regObj.setPOno(obj.getPOno());
            regObj.setPID(Integer.parseInt(dtm.getValueAt(raw_id, 1).toString()));
            regObj.setPDescription(dtm.getValueAt(raw_id, 2).toString());
            regObj.setQty(Integer.parseInt(dtm.getValueAt(raw_id, 3).toString()));

            list.add(regObj);
        }
        PoRegistry PRobj = new PoRegistry();
        boolean stat = PRobj.addPoRegistryBulk(list);
        return stat;
    }

    private void clearAll() {
        DefaultTableModel dtm = (DefaultTableModel) tblPOV.getModel();
        dtm.setRowCount(0);
        loadComboVendor();

        setID();
    }

    private void printReport() {
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String dt = df.format(dcPODate.getDate());
        try {
            JRTableModelDataSource ds = new JRTableModelDataSource(tblPOV.getModel());
            String rs = "src\\RPT\\PO.jrxml";
            Map<String, Object> param = new HashMap<String, Object>();
            param.put("pono", txtPONo.getText());
            param.put("Vendor", ddlVendor.getSelectedItem().toString());

            param.put("In_date", dt);

            JasperReport jr = JasperCompileManager.compileReport(rs);
            JasperPrint jp = JasperFillManager.fillReport(jr, param, ds);
            JasperViewer.viewReport(jp, false);

        } catch (JRException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
}
