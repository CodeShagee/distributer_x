/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Domain.UserLevel;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shiyanrox
 */
public class UserAuthentication extends javax.swing.JFrame {

    /**
     * Creates new form UserAuthentication
     */
    public UserAuthentication() {
        initComponents();
        loadTable();
        setID();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtLvlId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtLvlName = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        cbProduct = new javax.swing.JCheckBox();
        cbBatch = new javax.swing.JCheckBox();
        cbCategory = new javax.swing.JCheckBox();
        cbStock = new javax.swing.JCheckBox();
        cbCustomer = new javax.swing.JCheckBox();
        cbVendor = new javax.swing.JCheckBox();
        cbInvoice = new javax.swing.JCheckBox();
        cbPo = new javax.swing.JCheckBox();
        cbSo = new javax.swing.JCheckBox();
        cbSOrtn = new javax.swing.JCheckBox();
        cbPORtn = new javax.swing.JCheckBox();
        cbGrn = new javax.swing.JCheckBox();
        cbUser = new javax.swing.JCheckBox();
        cbUserAuth = new javax.swing.JCheckBox();
        cbReprt = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUserLvl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DistributerX: User Authentication");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Level ID");

        txtLvlId.setEditable(false);

        jLabel2.setText("Level Name");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLvlId, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtLvlName, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(txtLvlId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLvlName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        cbProduct.setText("Product");

        cbBatch.setText("Batch");

        cbCategory.setText("Category");

        cbStock.setText("Stock");

        cbCustomer.setText("Customer");

        cbVendor.setText("Vendor");

        cbInvoice.setText("Invoce");

        cbPo.setText("Purchasing Order");

        cbSo.setText("Sales Order");

        cbSOrtn.setText("Sales Return");

        cbPORtn.setText("Purchasing Return");

        cbGrn.setText("GRN");

        cbUser.setText("User");

        cbUserAuth.setText("User Authentication ");

        cbReprt.setText("Report");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbProduct)
                    .addComponent(cbBatch)
                    .addComponent(cbCategory))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbVendor)
                    .addComponent(cbCustomer)
                    .addComponent(cbStock))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbSo)
                    .addComponent(cbPo)
                    .addComponent(cbInvoice))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbPORtn)
                    .addComponent(cbSOrtn)
                    .addComponent(cbGrn))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbReprt)
                    .addComponent(cbUserAuth)
                    .addComponent(cbUser))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbProduct)
                    .addComponent(cbStock)
                    .addComponent(cbInvoice)
                    .addComponent(cbSOrtn)
                    .addComponent(cbUser))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbUserAuth)
                    .addComponent(cbCustomer)
                    .addComponent(cbBatch)
                    .addComponent(cbPo)
                    .addComponent(cbPORtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbCategory)
                    .addComponent(cbVendor)
                    .addComponent(cbSo)
                    .addComponent(cbGrn)
                    .addComponent(cbReprt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tblUserLvl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "#", "Level ID", "Level Name", "Product", "Batch", "Category", "Stock", "Customer", "Vendor", "Invoice", "PO", "SO", "SaleRtn", "P.Rtn", "User", "U.Auth", "Rpt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUserLvl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblUserLvlMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblUserLvl);
        if (tblUserLvl.getColumnModel().getColumnCount() > 0) {
            tblUserLvl.getColumnModel().getColumn(0).setMaxWidth(30);
            tblUserLvl.getColumnModel().getColumn(1).setMaxWidth(35);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSave))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSave)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (txtLvlId.getText().isEmpty() | txtLvlName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Level ID and Level Name cannot be empty!", "Error", JOptionPane.ERROR);
        } else {
            if (btnSave.getText() == "Save") {

                boolean stat = this.addUserLevel(Integer.parseInt(txtLvlId.getText()), txtLvlName.getText(), cbProduct.isSelected(), cbBatch.isSelected(), cbCategory.isSelected(), cbStock.isSelected(), cbCustomer.isSelected(), cbVendor.isSelected(), cbInvoice.isSelected(), cbPo.isSelected(), cbSo.isSelected(), cbPORtn.isSelected(), cbSOrtn.isSelected(), cbGrn.isSelected(), cbUser.isSelected(), cbUserAuth.isSelected(), cbReprt.isSelected());
                if (stat) {
                    JOptionPane.showMessageDialog(rootPane, "User Level Added Successfully", "Oparation Complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Error in User Level Adding", "Oparation Incomplete", JOptionPane.ERROR);
                }
                this.loadTable();
                this.clearAll();
            } else {

                boolean stat = this.updateaddUserLevel(Integer.parseInt(txtLvlId.getText()), txtLvlName.getText(), cbProduct.isSelected(), cbBatch.isSelected(), cbCategory.isSelected(), cbStock.isSelected(), cbCustomer.isSelected(), cbVendor.isSelected(), cbInvoice.isSelected(), cbPo.isSelected(), cbSo.isSelected(), cbPORtn.isSelected(), cbSOrtn.isSelected(), cbGrn.isSelected(), cbUser.isSelected(), cbUserAuth.isSelected(), cbReprt.isSelected());
                if (stat) {
                    JOptionPane.showMessageDialog(rootPane, "User Level Added Successfully", "Oparation Complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Error in User Level Adding", "Oparation Incomplete", JOptionPane.ERROR);
                }
                this.loadTable();
                this.clearAll();
            }
        }


    }//GEN-LAST:event_btnSaveActionPerformed

    private void tblUserLvlMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserLvlMouseReleased
        int id = Integer.parseInt(tblUserLvl.getModel().getValueAt(tblUserLvl.getSelectedRow(), 1).toString());

        UserLevel objs = new UserLevel();
        UserLevel obj = objs.viewUserLevel(id);
        txtLvlId.setText(obj.getLvlID() + "");
        txtLvlName.setText(obj.getLvlName());
        cbProduct.setSelected(IntoBol(obj.getProduct()));

        cbBatch.setSelected(IntoBol(obj.getBatch()));
        cbCategory.setSelected(IntoBol(obj.getCategory()));
        cbStock.setSelected(IntoBol(obj.getStock()));
        cbCustomer.setSelected(IntoBol(obj.getCustomer()));
        cbVendor.setSelected(IntoBol(obj.getVendor()));
        cbInvoice.setSelected(IntoBol(obj.getInvoice()));
        cbPo.setSelected(IntoBol(obj.getPo()));
        cbSo.setSelected(IntoBol(obj.getSo()));
        cbPORtn.setSelected(IntoBol(obj.getPurchaseRtn()));
        cbSOrtn.setSelected(IntoBol(obj.getSaleRtn()));
        cbGrn.setSelected(IntoBol(obj.getGRN()));
        cbUser.setSelected(IntoBol(obj.getUser()));
        cbUserAuth.setSelected(IntoBol(obj.getUsarLvl()));
        cbReprt.setSelected(IntoBol(obj.getReports()));

        btnSave.setText("Update");

    }//GEN-LAST:event_tblUserLvlMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserAuthentication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserAuthentication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserAuthentication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserAuthentication.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserAuthentication().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox cbBatch;
    private javax.swing.JCheckBox cbCategory;
    private javax.swing.JCheckBox cbCustomer;
    private javax.swing.JCheckBox cbGrn;
    private javax.swing.JCheckBox cbInvoice;
    private javax.swing.JCheckBox cbPORtn;
    private javax.swing.JCheckBox cbPo;
    private javax.swing.JCheckBox cbProduct;
    private javax.swing.JCheckBox cbReprt;
    private javax.swing.JCheckBox cbSOrtn;
    private javax.swing.JCheckBox cbSo;
    private javax.swing.JCheckBox cbStock;
    private javax.swing.JCheckBox cbUser;
    private javax.swing.JCheckBox cbUserAuth;
    private javax.swing.JCheckBox cbVendor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUserLvl;
    private javax.swing.JTextField txtLvlId;
    private javax.swing.JTextField txtLvlName;
    // End of variables declaration//GEN-END:variables
private boolean addUserLevel(int id, String Name, boolean product, boolean batch, boolean category, boolean stock, boolean customer, boolean vendor, boolean invoice, boolean po, boolean so, boolean PurchaseRtn, boolean saleRtn, boolean GRN, boolean user, boolean UsarLvl, boolean reports) {
        boolean status;
        UserLevel obj = new UserLevel();
        obj.setLvlID(id);
        obj.setLvlName(Name);
        obj.setProduct(BoltoInt(product));
        obj.setBatch(BoltoInt(batch));
        obj.setCategory(BoltoInt(category));
        obj.setStock(BoltoInt(stock));
        obj.setCustomer(BoltoInt(customer));
        obj.setVendor(BoltoInt(vendor));
        obj.setInvoice(BoltoInt(invoice));
        obj.setPo(BoltoInt(po));
        obj.setSo(BoltoInt(so));
        obj.setPurchaseRtn(BoltoInt(PurchaseRtn));
        obj.setSaleRtn(BoltoInt(saleRtn));
        obj.setGRN(BoltoInt(GRN));
        obj.setUser(BoltoInt(user));
        obj.setUsarLvl(BoltoInt(UsarLvl));
        obj.setReports(BoltoInt(reports));

//batch,category,stock,customer,vendor,invoice,po,so,PurchaseRtn,saleRtn,GRN,user,UsarLvl,reports
        status = obj.addUserLevel(obj);

        return status;
    }

    private boolean updateaddUserLevel(int id, String Name, boolean product, boolean batch, boolean category, boolean stock, boolean customer, boolean vendor, boolean invoice, boolean po, boolean so, boolean PurchaseRtn, boolean saleRtn, boolean GRN, boolean user, boolean UsarLvl, boolean reports) {
        boolean status;
        UserLevel obj = new UserLevel();
        obj.setLvlID(id);
        obj.setLvlName(Name);
        obj.setProduct(BoltoInt(product));
        obj.setBatch(BoltoInt(batch));
        obj.setCategory(BoltoInt(category));
        obj.setStock(BoltoInt(stock));
        obj.setCustomer(BoltoInt(customer));
        obj.setVendor(BoltoInt(vendor));
        obj.setInvoice(BoltoInt(invoice));
        obj.setPo(BoltoInt(po));
        obj.setSo(BoltoInt(so));
        obj.setPurchaseRtn(BoltoInt(PurchaseRtn));
        obj.setSaleRtn(BoltoInt(saleRtn));
        obj.setGRN(BoltoInt(GRN));
        obj.setUser(BoltoInt(user));
        obj.setUsarLvl(BoltoInt(UsarLvl));
        obj.setReports(BoltoInt(reports));

//batch,category,stock,customer,vendor,invoice,po,so,PurchaseRtn,saleRtn,GRN,user,UsarLvl,reports
        status = obj.updateUserLevel(obj);

        return status;
    }

    private int BoltoInt(boolean value) {
        int val;
        if (value) {
            val = 1;
        } else {
            val = 0;
        }
        return val;
    }

    private boolean IntoBol(int value) {
        boolean val;
        if (value == 1) {
            val = true;
        } else {
            val = false;
        }
        return val;
    }

    private void loadTable() {
        UserLevel POobj = new UserLevel();
        ArrayList<UserLevel> POList = POobj.loadUserLevel();
        if (POList.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Sorry ! No Invoice Found.");
        } else {
            DefaultTableModel dtm = (DefaultTableModel) tblUserLvl.getModel();
            dtm.setRowCount(0);
            int count = 0;
            while (POList.size() > count) {
                Vector v = new Vector();
                UserLevel obj = new UserLevel();
                obj = POList.get(count);
                v.add(count + 1);
                v.add(obj.getLvlID());
                v.add(obj.getLvlName());
                v.add(IntoBol(obj.getProduct()));
                v.add(IntoBol(obj.getBatch()));
                v.add(IntoBol(obj.getCategory()));
                v.add(IntoBol(obj.getStock()));
                v.add(IntoBol(obj.getCustomer()));
                v.add(IntoBol(obj.getVendor()));
                v.add(IntoBol(obj.getInvoice()));
                v.add(IntoBol(obj.getPo()));
                v.add(IntoBol(obj.getSo()));
                v.add(IntoBol(obj.getPurchaseRtn()));
                v.add(IntoBol(obj.getSaleRtn()));
                v.add(IntoBol(obj.getGRN()));
                v.add(IntoBol(obj.getUser()));
                v.add(IntoBol(obj.getUsarLvl()));
                v.add(IntoBol(obj.getReports()));

                dtm.addRow(v);
                count++;

            }
        }

    }

    private void setID() {

        int id;
        UserLevel obj = new UserLevel();
        id = obj.getLastUserLvlID();
        id++;
        txtLvlId.setText(id + "");
        Date date = new Date();
        btnSave.setText("Save");

    }

    private void clearAll() {

        txtLvlName.setText("");
        cbProduct.setSelected(false);
        cbBatch.setSelected(false);
        cbCategory.setSelected(false);
        cbStock.setSelected(false);
        cbCustomer.setSelected(false);
        cbVendor.setSelected(false);
        cbInvoice.setSelected(false);
        cbPo.setSelected(false);
        cbSo.setSelected(false);
        cbPORtn.setSelected(false);
        cbSOrtn.setSelected(false);
        cbGrn.setSelected(false);
        cbUser.setSelected(false);
        cbUserAuth.setSelected(false);
        cbReprt.setSelected(false);
        setID();
    }
}
