/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Domain.PO;
import Domain.SalesOrder;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shiyanrox
 */
public class ViewEnteredPOfrmCustomers extends javax.swing.JFrame {

    /**
     * Creates new form ViewEnteredPOfrmCustomers
     */
    public ViewEnteredPOfrmCustomers() {
        initComponents();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtPOCfind = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dcFrom = new com.toedter.calendar.JDateChooser();
        dcTo = new com.toedter.calendar.JDateChooser();
        btnPOVVFind = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPOVC = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("DistributerX: Purchasing Order from Customer View");

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("View Entered PO from Customers"));

        jLabel1.setText("Name");

        jLabel2.setText("From");

        jLabel3.setText("To");

        btnPOVVFind.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/FontAwesome_f002(0)_24.png"))); // NOI18N
        btnPOVVFind.setText("Find");
        btnPOVVFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPOVVFindActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPOCfind, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dcFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dcTo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPOVVFind)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(dcFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dcTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPOCfind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnPOVVFind)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tblPOVC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "#", "Ref.Code", "PO No", "Customer Name", "Issued date", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPOVC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblPOVCMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblPOVC);
        if (tblPOVC.getColumnModel().getColumnCount() > 0) {
            tblPOVC.getColumnModel().getColumn(0).setMaxWidth(40);
            tblPOVC.getColumnModel().getColumn(1).setMaxWidth(70);
            tblPOVC.getColumnModel().getColumn(2).setMaxWidth(70);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPOVVFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPOVVFindActionPerformed
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String fDate=null;
        String tDate=null;
        Date FromDate = dcFrom.getDate();
        Date ToDate = dcTo.getDate();
        if (FromDate != null & ToDate != null) {
            int comp = FromDate.compareTo(ToDate);
            if (comp <= 0) {
                fDate = df.format(FromDate);
                tDate = df.format(ToDate);
            } else {
                JOptionPane.showMessageDialog(rootPane, "From Date is Higher than To Date!", "Oops", JOptionPane.INFORMATION_MESSAGE);
            }
        } else if (FromDate != null) {
            fDate = df.format(FromDate);
        } else if (ToDate != null) {
            tDate = df.format(ToDate);
        }

        this.findSalesOrderByFilter(txtPOCfind.getText(), fDate, tDate);
    }//GEN-LAST:event_btnPOVVFindActionPerformed

    private void tblPOVCMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPOVCMouseReleased
        DefaultTableModel dtm = (DefaultTableModel) tblPOVC.getModel();
        int Status;
        if(Boolean.parseBoolean(dtm.getValueAt(tblPOVC.getSelectedRow(), 4).toString())){Status=1;}
        else
        {
            Status=0;
        }
        SalesOrder obj=new SalesOrder();
        obj.setRefCode(Integer.parseInt(dtm.getValueAt(tblPOVC.getSelectedRow(), 1).toString()));
        obj.setStatus(Status);
        boolean result = new SalesOrder().updateSalesOrder(obj);
        if (result) {
            if (Status==1) {
                JOptionPane.showMessageDialog(rootPane, "SalesOrder Activated Successfully", "Oparation Complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(rootPane, "SalesOrder Canceled Successfully", "Oparation Incomplete", JOptionPane.INFORMATION_MESSAGE);
            }        } else {
                JOptionPane.showMessageDialog(rootPane, "Error in Oparation", "Oparation Incomplete", JOptionPane.ERROR);
            }

    }//GEN-LAST:event_tblPOVCMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewEnteredPOfrmCustomers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewEnteredPOfrmCustomers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewEnteredPOfrmCustomers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewEnteredPOfrmCustomers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewEnteredPOfrmCustomers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPOVVFind;
    private com.toedter.calendar.JDateChooser dcFrom;
    private com.toedter.calendar.JDateChooser dcTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPOVC;
    private javax.swing.JTextField txtPOCfind;
    // End of variables declaration//GEN-END:variables
private void loadTable() {
        SalesOrder POobj = new SalesOrder();
        ArrayList<SalesOrder> POList = POobj.loadSalesOrder();
        if (POList.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Sorry ! No PO Found.");
        } else {
            DefaultTableModel dtm = (DefaultTableModel) tblPOVC.getModel();
            dtm.setRowCount(0);
            int count = 0;
            while (POList.size() > count) {
                Vector v = new Vector();
                SalesOrder po = new SalesOrder();
                po = POList.get(count);
                v.add(count + 1);
                v.add(po.getRefCode());
                v.add(po.getPoNo());
                v.add(po.getCustomer());
                v.add(po.getDate());
                if(po.getStatus()==1) {v.add(true);} else {v.add(false);}
                

                dtm.addRow(v);
                count++;

            }
        }

    }
private void findSalesOrderByFilter(String customer,String fDate,String tDate) {
        SalesOrder POobj = new SalesOrder();
        ArrayList<SalesOrder> POList = POobj.searchSalesOrderByFilter(customer, fDate, tDate);
        if (POList.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Sorry ! No Sales Order Found.");
        } else {
            DefaultTableModel dtm = (DefaultTableModel) tblPOVC.getModel();
            dtm.setRowCount(0);
            int count = 0;
            while (POList.size() > count) {
                Vector v = new Vector();
                SalesOrder po = new SalesOrder();
                po = POList.get(count);
                v.add(count + 1);
                v.add(po.getRefCode());
                v.add(po.getPoNo());
                v.add(po.getCustomer());
                v.add(po.getDate());
                if(po.getStatus()==1) {v.add(true);} else {v.add(false);}
                

                dtm.addRow(v);
                count++;

            }
        }

    }
}
